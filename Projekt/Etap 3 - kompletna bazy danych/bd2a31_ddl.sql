-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2021-01-15 09:57:15 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




DROP TABLE atrybut_rodzaju_umowy CASCADE CONSTRAINTS;
DROP TABLE definicja_atrybutu CASCADE CONSTRAINTS;
DROP TABLE rodzaj_umowy CASCADE CONSTRAINTS;
DROP TABLE umowa_cywilnoprawna CASCADE CONSTRAINTS;
DROP TABLE wartosc_atrybutu CASCADE CONSTRAINTS;
DROP TABLE wykonawca CASCADE CONSTRAINTS;





CREATE TABLE atrybut_rodzaju_umowy (
    id_rodzaju    NUMBER(4) NOT NULL,
    id_atrybutu   NUMBER(4) NOT NULL
)
LOGGING;

CREATE INDEX atrybut_rodzaju_umowy_idx ON
    atrybut_rodzaju_umowy (
        id_atrybutu
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON atrybut_rodzaju_umowy TO bd2a31_app;

ALTER TABLE atrybut_rodzaju_umowy ADD CONSTRAINT atrybut_rodzaju_umowy_pk PRIMARY KEY ( id_rodzaju,
                                                                                        id_atrybutu );

CREATE TABLE definicja_atrybutu (
    id_atrybutu      NUMBER(4) NOT NULL,
    nazwa            VARCHAR2(100) NOT NULL,
    czy_opcjonalna   CHAR(1) NOT NULL,
    typ_danych       CHAR(1) NOT NULL,
    opis             VARCHAR2(2000)
)
LOGGING;

COMMENT ON COLUMN definicja_atrybutu.czy_opcjonalna IS
    'Okreslamy, czy dany atrybut ma byc opcjonalny.
Jesli atrybut  ma byc obowiazkowy, mamy wartosc ''N''.
W przeciwnym przypadku, mamy wartosc ''T''.'
    ;

COMMENT ON COLUMN definicja_atrybutu.typ_danych IS
    'Typ danych, jaki ma miec nasz atrybut umowy.
Mozemy podac jedna z 3 wartosci:
1) ''C'' - jeœli typ tekstowy
2) ''N'' - jeœli typ numeryczny
3) ''D'' - jeœli podajemy  date'
    ;

GRANT SELECT, INSERT, UPDATE, DELETE ON definicja_atrybutu TO bd2a31_app;

ALTER TABLE definicja_atrybutu
    ADD CONSTRAINT def_atr_czy_opcjonalna_ck CHECK ( czy_opcjonalna IN (
        'T',
        'N'
    ) );

ALTER TABLE definicja_atrybutu
    ADD CONSTRAINT def_atr_typ_danych_ck CHECK ( typ_danych IN (
        'C',
        'N',
        'D'
    ) );

ALTER TABLE definicja_atrybutu ADD CONSTRAINT definicja_atrybutu_pk PRIMARY KEY ( id_atrybutu );

ALTER TABLE definicja_atrybutu ADD CONSTRAINT definicja_atrybutu_nazwa_un UNIQUE ( nazwa );

CREATE TABLE rodzaj_umowy (
    id_rodzaju   NUMBER(4) NOT NULL,
    nazwa        VARCHAR2(100) NOT NULL,
    opis         VARCHAR2(2000)
)
LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON rodzaj_umowy TO bd2a31_app;

ALTER TABLE rodzaj_umowy ADD CONSTRAINT rodzaj_umowy_pk PRIMARY KEY ( id_rodzaju );

ALTER TABLE rodzaj_umowy ADD CONSTRAINT rodzaj_umowy_nazwa_un UNIQUE ( nazwa );

CREATE TABLE umowa_cywilnoprawna (
    id_rodzaju           NUMBER(4) NOT NULL,
    id_wykonawcy         NUMBER(4) NOT NULL,
    id_umowy             NUMBER(4) NOT NULL,
    nr_umowy             VARCHAR2(100) NOT NULL,
    data_zawarcia        DATE NOT NULL,
    kwota                NUMBER(9, 2) NOT NULL,
    poczatek_wykonania   DATE NOT NULL,
    koniec_wykonania     DATE NOT NULL,
    temat                VARCHAR2(500) NOT NULL
)
LOGGING;

CREATE INDEX umowa_cywilnoprawna__idx ON
    umowa_cywilnoprawna (
        id_wykonawcy
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON umowa_cywilnoprawna TO bd2a31_app;

ALTER TABLE umowa_cywilnoprawna ADD CONSTRAINT umowa_cywilnoprawna_ck_1 CHECK ( poczatek_wykonania <= koniec_wykonania );

ALTER TABLE umowa_cywilnoprawna ADD CONSTRAINT umowa_cywilnoprawna_ck_2 CHECK ( data_zawarcia <= poczatek_wykonania );

ALTER TABLE umowa_cywilnoprawna ADD CONSTRAINT umowa_cywilnoprawna_pk PRIMARY KEY ( id_rodzaju,
                                                                                    id_umowy );

ALTER TABLE umowa_cywilnoprawna ADD CONSTRAINT umowa_cywilnoprawna__un UNIQUE ( id_umowy );

CREATE TABLE wartosc_atrybutu (
    id_rodzaju    NUMBER(4) NOT NULL,
    id_umowy      NUMBER(4) NOT NULL,
    id_atrybutu   NUMBER(4) NOT NULL,
    wartosc       VARCHAR2(100)
)
LOGGING;

CREATE INDEX wartosc_atrybutu__idx ON
    wartosc_atrybutu (
        id_rodzaju
    ASC,
        id_atrybutu
    ASC )
        LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON wartosc_atrybutu TO bd2a31_app;

ALTER TABLE wartosc_atrybutu
    ADD CONSTRAINT wartosc_atrybutu_pk PRIMARY KEY ( id_rodzaju,
                                                     id_umowy,
                                                     id_atrybutu );

CREATE TABLE wykonawca (
    id_wykonawcy     NUMBER(4) NOT NULL,
    nip              CHAR(10),
    ulica            VARCHAR2(100) NOT NULL,
    nr_domu          VARCHAR2(5) NOT NULL,
    nr_mieszkania    NUMBER(4),
    kod_pocztowy     VARCHAR2(15) NOT NULL,
    miejscowosc      VARCHAR2(50) NOT NULL,
    kraj             VARCHAR2(30) NOT NULL,
    imie             VARCHAR2(50),
    nazwisko         VARCHAR2(100),
    data_urodzenia   DATE,
    pesel            CHAR(11)
)
LOGGING;

GRANT SELECT, INSERT, UPDATE, DELETE ON wykonawca TO bd2a31_app;

ALTER TABLE wykonawca ADD CONSTRAINT wykonawca_pk PRIMARY KEY ( id_wykonawcy );

ALTER TABLE wartosc_atrybutu
    ADD CONSTRAINT atrybut_rodzaju_umowy_fk FOREIGN KEY ( id_rodzaju,
                                                          id_atrybutu )
        REFERENCES atrybut_rodzaju_umowy ( id_rodzaju,
                                           id_atrybutu )
    DEFERRABLE;

ALTER TABLE atrybut_rodzaju_umowy
    ADD CONSTRAINT definicja_atrybutu_fk FOREIGN KEY ( id_atrybutu )
        REFERENCES definicja_atrybutu ( id_atrybutu )
    DEFERRABLE;

ALTER TABLE umowa_cywilnoprawna
    ADD CONSTRAINT rodzaj_umowy_fk FOREIGN KEY ( id_rodzaju )
        REFERENCES rodzaj_umowy ( id_rodzaju )
    DEFERRABLE;

ALTER TABLE atrybut_rodzaju_umowy
    ADD CONSTRAINT rodzaj_umowy_fkv2 FOREIGN KEY ( id_rodzaju )
        REFERENCES rodzaj_umowy ( id_rodzaju )
    DEFERRABLE;

ALTER TABLE wartosc_atrybutu
    ADD CONSTRAINT umowa_cywilnoprawna_fk FOREIGN KEY ( id_rodzaju,
                                                        id_umowy )
        REFERENCES umowa_cywilnoprawna ( id_rodzaju,
                                         id_umowy )
            ON DELETE CASCADE
    DEFERRABLE;

ALTER TABLE umowa_cywilnoprawna
    ADD CONSTRAINT wykonawca_fk FOREIGN KEY ( id_wykonawcy )
        REFERENCES wykonawca ( id_wykonawcy )
    DEFERRABLE;

/*
CREATE OR REPLACE SYNONYM bd2a31_app.atrybut_rodzaju_umowy FOR atrybut_rodzaju_umowy;

CREATE OR REPLACE SYNONYM bd2a31_app.definicja_atrybutu FOR definicja_atrybutu;

CREATE OR REPLACE SYNONYM bd2a31_app.rodzaj_umowy FOR rodzaj_umowy;

CREATE OR REPLACE SYNONYM bd2a31_app.umowa_cywilnoprawna FOR umowa_cywilnoprawna;

CREATE OR REPLACE SYNONYM bd2a31_app.wartosc_atrybutu FOR wartosc_atrybutu;

CREATE OR REPLACE SYNONYM bd2a31_app.wykonawca FOR wykonawca;
*/

CREATE OR REPLACE TRIGGER fkntm_atrybut_rodzaju_umowy BEFORE
    UPDATE OF id_rodzaju, id_atrybutu ON atrybut_rodzaju_umowy
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table ATRYBUT_RODZAJU_UMOWY is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_umowa_cywilnoprawna BEFORE
    UPDATE OF id_wykonawcy, id_rodzaju ON umowa_cywilnoprawna
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table UMOWA_CYWILNOPRAWNA is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_wartosc_atrybutu BEFORE
    UPDATE OF id_rodzaju, id_atrybutu, id_umowy ON wartosc_atrybutu
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table WARTOSC_ATRYBUTU is violated');
END;
/











/* Tabela Wykonawca */
DROP sequence seq_wykonawca;
/
CREATE sequence seq_wykonawca start with 500 increment by 1 nocache nocycle;
/
--select seq_wykonawca.nextval from dual;

CREATE OR REPLACE TRIGGER trig_wykonawca
BEFORE INSERT ON wykonawca
FOR EACH ROW
  WHEN (new.id_wykonawcy IS NULL)
BEGIN
  :new.id_wykonawcy := seq_wykonawca.NEXTVAL;
END;
/



/* Tabela Umowa_cywilnoprawna */
DROP sequence seq_umowa_cywilnoprawna;
/
CREATE sequence seq_umowa_cywilnoprawna start with 500 increment by 1 nocache nocycle;
/
--select seq_umowa_cywilnoprawna.nextval from dual;

CREATE OR REPLACE TRIGGER trig_umowa_cywilnoprawna
BEFORE INSERT ON umowa_cywilnoprawna
FOR EACH ROW
  WHEN (new.id_umowy IS NULL)
BEGIN
  :new.id_umowy := seq_umowa_cywilnoprawna.NEXTVAL;
END;
/


/* Tabela Rodzaj_umowy */
DROP sequence seq_rodzaj_umowy;
/
CREATE sequence seq_rodzaj_umowy start with 500 increment by 1 nocache nocycle;
/
--select seq_rodzaj_umowy.nextval from dual;

CREATE OR REPLACE TRIGGER trig_rodzaj_umowy
BEFORE INSERT ON rodzaj_umowy
FOR EACH ROW
  WHEN (new.id_rodzaju IS NULL)
BEGIN
  :new.id_rodzaju := seq_rodzaj_umowy.NEXTVAL;
END;
/





/* Tabela Definicja_atrybutu */
DROP sequence seq_definicja_atrybutu;
/
CREATE sequence seq_definicja_atrybutu start with 500 increment by 1 nocache nocycle;
/
--select seq_definicja_atrybutu.nextval from dual;

CREATE OR REPLACE TRIGGER trig_definicja_atrybutu
BEFORE INSERT ON definicja_atrybutu
FOR EACH ROW
  WHEN (new.id_atrybutu IS NULL)
BEGIN
  :new.id_atrybutu := seq_definicja_atrybutu.NEXTVAL;
END;
/










-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             3
-- ALTER TABLE                             19
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           6
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
